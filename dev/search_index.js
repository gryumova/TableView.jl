var documenterSearchIndex = {"docs":
[{"location":"pages/generate_html/#Generating-HTML-file","page":"Generate HTML","title":"Generating HTML-file","text":"","category":"section"},{"location":"pages/generate_html/","page":"Generate HTML","title":"Generate HTML","text":"TableView.show_table","category":"page"},{"location":"pages/generate_html/#TableView.show_table","page":"Generate HTML","title":"TableView.show_table","text":"TableView.show_table(\n                table; \n                columnSettings::Dict = Dict(), \n                resize::Bool = true, \n                outFile::String = \"./index.html\"\n            ) -> String\n\nGenerate html file with a table based on AgGrid.\n\nFields\n\ntable: Table for display.\ncolumnSettings::Dict: Configuration for table filters in the form of a dictionary.\nresize::Bool: Checkbox for changing column widths.\noutFile::String: Path for the output file.\n\nExamples\n\njulia> data = ((a = 0, b = 1),(a = 1, b = 35))\n((a = 0, b = 1), (a = 1, b = 35))\n\njulia> settings = ( \"a\" => (\"filter\" => \"number\"))\n\"a\" => (\"filter\" => \"number\")\n\njulia> TableView.showTable(data, columnSettings=settings)\n\"./index.html\"\n\n\n\n\n\n","category":"function"},{"location":"#TableView.jl","page":"Home","title":"TableView.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TableView is a Julia package for generating an html file with a table based on AgGrid. You can set the configuration for filters and customize the display of column cells.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simple example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TableView\n\n\ndata = (\n    (a = 0, b = 1, c = 6),\n    (a = 1, b = 35, c = 7),\n    (a = 2, b = 134, c = 6),\n    (a = 3, b = 868, c = 7),\n    (a = 4, b = 34, c = 0),\n)\n\n# 'table' argument can be 'number', 'text', 'date'\n# 'style' argument can include 'color' and 'background'. You can change text color depending of a value of cell.\n#       style = (\n#           colorUp = \"red\",\n#           colorDown = \"green\",\n#           threshold = 10,\n#       )\n#       or\n#       style = (\n#           color = \"red\",\n#           equals = 10,\n#       )\n\nsettings = Dict(\n    a => Dict(\n        filter => \"number\",\n        style => (\n            color => \"red\",\n            background => \"#FFFF79\"\n        )\n    ),\n    c => Dict(\n        filter = \"text\",\n    ),\n    cols => Dict()\n)\n\n# 'table' argument specifies the data to be displayed in the table\n\n# 'settings' argument specifies the columns to filter, the type of filtering, and the styling of the columns. \n# If you want to filter by columns, specify the key 'cols'\n\n# 'resize' argument indicates the ability to change the width of the columns. \n# If resize=false, you cannot reduce the column size to less than 150px.\n\nshowTable(table=data, columnSettings=settings, resize=false, outFile=\"./index.html\")","category":"page"}]
}
